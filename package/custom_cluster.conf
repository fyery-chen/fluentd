<source>
  @type tail
  path /var/lib/rancher/log-volumes/*/apache2/*/*
  pos_file /fluentd/log/custom_cluster_apache2_new.log.pos
  tag tmp-cluster-custom.*
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)?$/ 
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/*/nginx/*/* 
  pos_file /fluentd/log/custom_cluster_nginx_new.log.pos
  tag tmp-cluster-custom.*
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<gzip_ratio>[^ ]*)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/*/rfc3164/*/*
  pos_file /fluentd/log/custom_cluster_rfc3164_new.log.pos
  tag tmp-cluster-custom.*
  format /^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  time_format "%b %d %H:%M:%S"
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/*/rfc5424/*/*
  pos_file /fluentd/log/custom_cluster_rfc5424_new.log.pos
  tag tmp-cluster-custom.*
  format /\A^\<(?<pri>[0-9]{1,3})\>[1-9]\d{0,2} (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\[(.*)\]|[^ ])) (?<message>.+)$\z/
  time_format "%Y-%m-%dT%H:%M:%S.%L%z"
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/*/json/*/*
  pos_file /fluentd/log/custom_cluster_json_new.log.pos
  tag tmp-cluster-custom.*
  format none
</source>

## handle old version begin
<source>
  @type tail
  path /var/lib/rancher/log-volumes/apache2/*/*
  pos_file /fluentd/log/custom_cluster_apache2.log.pos
  tag tmp2.cluster-custom.*
  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)?$/ 
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/nginx/*/* 
  pos_file /fluentd/log/custom_cluster_nginx.log.pos
  tag tmp2.cluster-custom.*
  format /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)") (?<gzip_ratio>[^ ]*)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/rfc3164/*/*
  pos_file /fluentd/log/custom_cluster_rfc3164.log.pos
  tag tmp2.cluster-custom.*
  format /^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  time_format "%b %d %H:%M:%S"
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/rfc5424/*/*
  pos_file /fluentd/log/custom_cluster_rfc5424.log.pos
  tag tmp2.cluster-custom.*
  format /\A^\<(?<pri>[0-9]{1,3})\>[1-9]\d{0,2} (?<time>[^ ]+) (?<host>[^ ]+) (?<ident>[^ ]+) (?<pid>[-0-9]+) (?<msgid>[^ ]+) (?<extradata>(\[(.*)\]|[^ ])) (?<message>.+)$\z/
  time_format "%Y-%m-%dT%H:%M:%S.%L%z"
</source>

<source>
  @type tail
  path /var/lib/rancher/log-volumes/json/*/*
  pos_file /fluentd/log/custom_cluster_json.log.pos
  tag tmp2.cluster-custom.*
  format none
</source>
## handle old version end

<filter tmp-cluster-custom.**>
  @type record_transformer
  enable_ruby true  
  <record>
    tag ${tag}
    log_dir ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.((?<pod_id>[^_]+)_(?<volume_name>[^_]+))\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])*)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['log_dir'].gsub('@', '/').gsub('~', '_')}
    cluster_id ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['cluster_id']}
    cluster_name ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['cluster_name']}
    project_id ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['project_id']}
    project_name ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['project_name'].gsub('~', '_')}
    workload_name ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['workload_name']}
    container_name ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['container_name']}
    volume_name ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['volume_name']}
    filename ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['filename']}
    format ${component = tag.match(Regexp.compile('tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<pod_id>[^_]+)_(?<volume_name>[^_]+)\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])+)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)')); component['format']}
  </record>
</filter>

<match tmp-cluster-custom.**>
  @type rewrite_tag_filter
  <rule>
    key     tag
    pattern tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.((?<pod_id>[^_]+)_(?<volume_name>[^_]+))\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])*)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)
    tag     tmp1.cluster-custom.$10_$6_$10_$11
  </rule>
</match>

<filter tmp1.cluster-custom.**>
  @type kubernetes_metadata 
  tag_to_kubernetes_name_regexp tmp1\.cluster-custom\.(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace>[^_]+)_(?<docker_id>.+)_(?<container_name>.+)$
</filter>

<match tmp1.cluster-custom.**>
  @type rewrite_tag_filter
  remove_tag_prefix tmp1
  <rule>
    key     tag
    pattern tmp-cluster-custom\.var\.lib\.rancher\.log-volumes\.((?<pod_id>[^_]+)_(?<volume_name>[^_]+))\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])*)_(?<container_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)
    tag     cluster-custom
  </rule>
</match>


# handle old version begin
<filter tmp2.cluster-custom.**>
  @type record_transformer
  enable_ruby true  
  <record>
    tag ${tag}    
    log_dir ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['log_dir'].gsub('@', '/').gsub('~', '_')}
    cluster_id ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>.+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9]+\.[a-z0-9]+)$')); component['cluster_id']}
    cluster_name ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['cluster_name']}
    project_id ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['project_id']}
    project_name ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['project_name'].gsub('~', '_')}
    workload_name ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['workload_name']}
    container_name ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['container_name']}
    volume_name ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['volume_name']}
    filename ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['filename']}
    format ${component = tag.match(Regexp.compile('tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$')); component['format']}
  </record>
</filter>

<match tmp2.cluster-custom.**>
  @type rewrite_tag_filter
  remove_tag_prefix tmp2
  <rule>
    key     tag
    pattern tmp2\.cluster-custom\.var\.lib\.rancher\.log-volumes\.(?<format>[a-z0-9]+)\.(?<log_dir>[^_]+)_(?<cluster_id>[^_]+)_(?<cluster_name>[^_]+)_(?<namespace>[^_]+)_(?<project_id>[^_]+)_(?<project_name>[^_]+)_(?<workload_name>[^_]+)_(?<container_name>[^_]+)_(?<volume_name>[^_^.]+)\.(?<filename>[a-z0-9A-Z]+\.[a-zA-Z0-9]+)$
    tag     cluster-custom
  </rule>
</match>
# handle old version end

<filter cluster-custom.**>
  @type record_transformer
  enable_ruby
  remove_keys docker,tag
</filter>